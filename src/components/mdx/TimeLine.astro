---
import { Icon } from "astro-icon/components";

interface TimelineItem {
  year: string;
  event: string;
  icon?: string;
  emoji?: string;
  color?: string;
  completed?: boolean;
}

interface Props {
  items: TimelineItem[];
  title?: string;
}

const { items, title } = Astro.props;

// 定义颜色常量
const DEFAULT_COLORS = {
  primary: {
    bg: "#4f46e5",
    shadow: "rgba(79, 70, 229, 0.5)",
    text: "#4f46e5"
  },
  secondary: {
    bg: "#7928ca",
    shadow: "rgba(121, 40, 202, 0.5)",
    text: "#7928ca"
  },
  blue: {
    bg: "#0ea5e9",
    shadow: "rgba(14, 165, 233, 0.5)",
    text: "#0ea5e9"
  },
  indigo: {
    bg: "#6366f1",
    shadow: "rgba(99, 102, 241, 0.5)",
    text: "#6366f1"
  },
  purple: {
    bg: "#8b5cf6",
    shadow: "rgba(139, 92, 246, 0.5)",
    text: "#8b5cf6"
  }
};
---  
<div class="timeline-container timeline-component">
  {title && <h2 class="timeline-title">{title}</h2>}
  
  <ul class="timeline-list">
    {
      items.map((item, index) => {
        const colorKey = item.color || (index % 2 === 0 ? "primary" : "secondary");
        const currentColor = DEFAULT_COLORS[colorKey as keyof typeof DEFAULT_COLORS] || DEFAULT_COLORS.primary;
        const iconName = item.icon || "check";
        const isEven = index % 2 === 0;
        
        return (
          <li class={`timeline-item ${isEven ? 'timeline-item-even' : 'timeline-item-odd'}`}>
            <hr class="timeline-line" />
            
            {isEven ? (
              <>
                <div class="timeline-start">
                  <time class="timeline-time" style={`color: ${currentColor.text}`}>{item.year}</time>
                </div>
                
                <div class="timeline-middle">
                  <div class="timeline-icon-container" style={`background-color: ${currentColor.bg}; box-shadow: 0 0 10px ${currentColor.shadow}`}>
                    {item.emoji ? (
                      <span class="timeline-emoji">{item.emoji}</span>
                    ) : (
                      <Icon name={`lucide:${iconName}`} class="timeline-icon" />
                    )}
                  </div>
                </div>
                
                <div class="timeline-end">
                  <div class="timeline-card">
                    <p>{item.event}</p>
                  </div>
                </div>
              </>
            ) : (
              <>
                <div class="timeline-start">
                  <div class="timeline-card">
                    <p>{item.event}</p>
                  </div>
                </div>
                
                <div class="timeline-middle">
                  <div class="timeline-icon-container" style={`background-color: ${currentColor.bg}; box-shadow: 0 0 10px ${currentColor.shadow}`}>
                    {item.emoji ? (
                      <span class="timeline-emoji">{item.emoji}</span>
                    ) : (
                      <Icon name={`lucide:${iconName}`} class="timeline-icon" />
                    )}
                  </div>
                </div>
                
                <div class="timeline-end">
                  <time class="timeline-time" style={`color: ${currentColor.text}`}>{item.year}</time>
                </div>
              </>
            )}
            
            <hr class="timeline-line" />
          </li>
        );
      })
    }
  </ul>
</div>

<script>
  // 获取当前页面主题
  function updateTimelineTheme() {
    const isDark = document.documentElement.getAttribute('data-theme') === 'dark';
    const timelineContainers = document.querySelectorAll('.timeline-component');
    
    timelineContainers.forEach(container => {
      if (isDark) {
        container.classList.add('timeline-dark');
      } else {
        container.classList.remove('timeline-dark');
      }
    });
  }
  
  // 初始化
  updateTimelineTheme();
  
  // 监听主题变化
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.attributeName === 'data-theme') {
        updateTimelineTheme();
      }
    });
  });
  
  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['data-theme'],
  });
</script>

<style>
  .timeline-container {
    max-width: 1000px;
    margin: 2rem auto;
    padding: 2rem 20px;
    border-radius: 1rem;
    background-color: var(--bg-card, #ffffff);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }
  
  .timeline-title {
    font-size: 1.75rem;
    font-weight: bold;
    margin-bottom: 2rem;
    text-align: center;
    color: var(--text-color, #1f2937);
  }
  
  .timeline-list {
    margin: 0;
    padding: 0;
    list-style: none;
    position: relative;
  }
  
  .timeline-list::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 50%;
    width: 2px;
    background-color: var(--border-color, #e2e8f0);
    transform: translateX(-50%);
  }
  
  .timeline-item {
    display: grid;
    grid-template-columns: 1fr 40px 1fr;
    gap: 0.5rem;
    position: relative;
    margin-bottom: 3rem;
  }
  
  .timeline-item:last-child {
    margin-bottom: 0;
  }
  
  .timeline-line {
    display: none;
  }
  
  .timeline-start {
    grid-column: 1;
    text-align: right;
  }
  
  .timeline-middle {
    grid-column: 2;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
  }
  
  .timeline-end {
    grid-column: 3;
    text-align: left;
  }
  
  .timeline-icon-container {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--icon-bg, #4f46e5);
    box-shadow: 0 0 10px var(--icon-shadow, rgba(79, 70, 229, 0.5));
    border: 2px solid var(--icon-border, #ffffff);
  }
  
  .timeline-icon {
    width: 20px;
    height: 20px;
    color: white;
  }
  
  .timeline-emoji {
    font-size: 1.2rem;
    line-height: 1;
  }
  
  /* 奇数和偶数时间线项的不同样式 */
  .timeline-item-odd .timeline-card {
    background-color: var(--card-bg-odd, #f0f7ff);
    border-color: var(--card-border-odd, #dbeafe);
  }

  .timeline-item-even .timeline-card {
    background-color: var(--card-bg-even, #faf5ff);
    border-color: var(--card-border-even, #e9d5ff);
  }
  
  .timeline-card {
    background-color: var(--card-bg, #f9fafb);
    border-radius: 0.75rem;
    padding: 1.25rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05), 0 1px 3px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    border: 1px solid var(--card-border, #e5e7eb);
  }
  
  .timeline-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
  }
  
  .timeline-card p {
    margin: 0;
    line-height: 1.5;
    color: var(--text-color, #374151);
  }
  
  .timeline-time {
    font-family: monospace;
    font-size: 1.1rem;
    font-weight: 600;
    display: inline-block;
    margin: 1rem 0;
    background-color: var(--time-bg, #f1f5f9);
    color: var(--time-text, #374151);
    padding: 0.5rem 1rem;
    border-radius: 2rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    border: 1px solid var(--time-border, #e2e8f0);
  }
  
  /* 响应式调整 */
  @media (max-width: 768px) {
    .timeline-list::before {
      left: 20px;
    }
    
    .timeline-item {
      grid-template-columns: 40px 1fr;
      gap: 1rem;
    }
    
    .timeline-item-even .timeline-start,
    .timeline-item-odd .timeline-start {
      grid-column: 2;
      grid-row: 2;
      text-align: left;
    }
    
    .timeline-item-even .timeline-middle,
    .timeline-item-odd .timeline-middle {
      grid-column: 1;
      grid-row: 1 / span 2;
    }
    
    .timeline-item-even .timeline-end,
    .timeline-item-odd .timeline-end {
      grid-column: 2;
      grid-row: 1;
      text-align: left;
    }
    
    .timeline-time {
      margin: 0.5rem 0;
    }
  }
  
  /* 添加移动端特定的样式调整 */
  @media (max-width: 480px) {
    .timeline-container {
      padding: 1.5rem;
    }
    
    .timeline-card {
      padding: 1rem;
    }
    
    .timeline-time {
      font-size: 1rem;
      padding: 0.4rem 0.8rem;
    }
  }
  
  /* 暗色模式适配 - 使用data-theme属性选择器 */
  [data-theme="dark"] .timeline-container {
    --bg-card: #1a1625;
    --text-color: rgba(255, 255, 255, 0.9);
    --border-color: #2d2d2d;
    --card-bg: #121212;
    --card-border: #2d2d2d;
    --card-bg-odd: #0f172a;
    --card-border-odd: #1e293b;
    --card-bg-even: #18122B;
    --card-border-even: #2D2B40;
    --time-bg: #121212;
    --time-text: rgba(255, 255, 255, 0.87);
    --time-border: #2d2d2d;
    --icon-border: #121212;
    --icon-shadow: rgba(255, 255, 255, 0.15);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
  }
  
  /* 确保在暗色模式下阴影效果适当 */
  [data-theme="dark"] .timeline-card {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3), 0 1px 3px rgba(0, 0, 0, 0.4);
  }
  
  [data-theme="dark"] .timeline-card:hover {
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.3);
  }
  
  [data-theme="dark"] .timeline-time {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }
  
  /* 额外添加的类，由JS控制 */
  .timeline-component.timeline-dark {
    --bg-card: #1a1625;
    --text-color: rgba(255, 255, 255, 0.9);
    --border-color: #2d2d2d;
    --card-bg: #121212;
    --card-border: #2d2d2d;
    --card-bg-odd: #0f172a;
    --card-border-odd: #1e293b;
    --card-bg-even: #18122B;
    --card-border-even: #2D2B40;
    --time-bg: #121212;
    --time-text: rgba(255, 255, 255, 0.87);
    --time-border: #2d2d2d;
    --icon-border: #121212;
    --icon-shadow: rgba(255, 255, 255, 0.15);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
  }
  
  .timeline-component.timeline-dark .timeline-card {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3), 0 1px 3px rgba(0, 0, 0, 0.4);
  }
  
  .timeline-component.timeline-dark .timeline-card:hover {
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.3);
  }
  
  .timeline-component.timeline-dark .timeline-time {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }
  
  /* 兼容.dark类选择器，以防万一 */
  .dark .timeline-container,
  html.dark .timeline-container,
  body.dark .timeline-container {
    --bg-card: #1a1625;
    --text-color: rgba(255, 255, 255, 0.9);
    --border-color: #2d2d2d;
    --card-bg: #121212;
    --card-border: #2d2d2d;
    --card-bg-odd: #0f172a;
    --card-border-odd: #1e293b;
    --card-bg-even: #18122B;
    --card-border-even: #2D2B40;
    --time-bg: #121212;
    --time-text: rgba(255, 255, 255, 0.87);
    --time-border: #2d2d2d;
    --icon-border: #121212;
    --icon-shadow: rgba(255, 255, 255, 0.15);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
  }
  
  .dark .timeline-card,
  html.dark .timeline-card,
  body.dark .timeline-card {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3), 0 1px 3px rgba(0, 0, 0, 0.4);
  }
  
  .dark .timeline-card:hover,
  html.dark .timeline-card:hover,
  body.dark .timeline-card:hover {
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.3);
  }
  
  .dark .timeline-time,
  html.dark .timeline-time,
  body.dark .timeline-time {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }
</style>