---
import { Icon } from "astro-icon/components";

interface TimelineItem {
  year: string;
  event: string;
  icon?: string;
  color?: "blue" | "purple" | "pink" | "default";
}

interface Props {
  items: TimelineItem[];
  title?: string;
}

const { items, title } = Astro.props;

// 设置默认颜色映射
const colorMap = {
  blue: {
    bg: "bg-blue-500",
    darkBg: "dark:bg-blue-600",
    textColor: "text-blue-500",
    darkTextColor: "dark:text-blue-400",
    shadowColor: "shadow-blue-500/30",
    darkShadowColor: "dark:shadow-blue-600/20",
    cardBg: "bg-blue-50",
    darkCardBg: "dark:bg-slate-800/80"
  },
  purple: {
    bg: "bg-purple-500",
    darkBg: "dark:bg-purple-600",
    textColor: "text-purple-500",
    darkTextColor: "dark:text-purple-400",
    shadowColor: "shadow-purple-500/30",
    darkShadowColor: "dark:shadow-purple-600/20",
    cardBg: "bg-purple-50",
    darkCardBg: "dark:bg-slate-800/80"
  },
  pink: {
    bg: "bg-pink-500",
    darkBg: "dark:bg-pink-600",
    textColor: "text-pink-500",
    darkTextColor: "dark:text-pink-400",
    shadowColor: "shadow-pink-500/30",
    darkShadowColor: "dark:shadow-pink-600/20",
    cardBg: "bg-pink-50",
    darkCardBg: "dark:bg-slate-800/80"
  },
  default: {
    bg: "bg-sky-500",
    darkBg: "dark:bg-sky-600",
    textColor: "text-sky-500",
    darkTextColor: "dark:text-sky-400",
    shadowColor: "shadow-sky-500/30",
    darkShadowColor: "dark:shadow-sky-600/20",
    cardBg: "bg-sky-50",
    darkCardBg: "dark:bg-slate-800/80"
  }
};
---  
<ul class="not-prose timeline timeline-vertical timeline-snap-icon max-w-4xl mx-auto my-8 px-4">
  {title && <h3 class="text-2xl font-bold mb-6 text-center">{title}</h3>}
  
  <div class="timeline-line-container">
    <div class="timeline-line-center bg-slate-200 dark:bg-slate-700"></div>
  </div>
  
  {
    items.map((item, index) => {
      const itemColor = item.color || (index % 2 === 0 ? "blue" : "purple");
      const colors = colorMap[itemColor];
      const iconName = item.icon || "check";
      
      return (
        <li class="timeline-item relative mb-6 last:mb-0">
          {index % 2 === 0 ? (
            <>
              <div class="timeline-start flex items-center justify-end pr-0">
                <time class={`font-mono text-base font-semibold ${colors.textColor} ${colors.darkTextColor} mr-2`}>{item.year}</time>
              </div>
              <div class="timeline-middle">
                <div class={`timeline-dot ${colors.bg} ${colors.darkBg} rounded-full p-1 shadow-lg ${colors.shadowColor} ${colors.darkShadowColor}`}>
                  <Icon name={`lucide:${iconName}`} class="w-4 h-4 text-white" />
                </div>
              </div>
              <div class="timeline-end pl-0">
                <div class={`timeline-box ${colors.cardBg} ${colors.darkCardBg} border border-slate-200 dark:border-slate-700 shadow-md hover:shadow-xl hover:-translate-y-1 transition-all duration-300 py-2 px-4 ml-1`}>
                  <p class="leading-relaxed text-slate-700 dark:text-slate-200">{item.event}</p>
                </div>
              </div>
            </>
          ) : (
            <>
              <div class="timeline-start pr-0">
                <div class={`timeline-box ${colors.cardBg} ${colors.darkCardBg} border border-slate-200 dark:border-slate-700 shadow-md hover:shadow-xl hover:-translate-y-1 transition-all duration-300 py-2 px-4 mr-1`}>
                  <p class="leading-relaxed text-slate-700 dark:text-slate-200">{item.event}</p>
                </div>
              </div>
              <div class="timeline-middle">
                <div class={`timeline-dot ${colors.bg} ${colors.darkBg} rounded-full p-1 shadow-lg ${colors.shadowColor} ${colors.darkShadowColor}`}>
                  <Icon name={`lucide:${iconName}`} class="w-4 h-4 text-white" />
                </div>
              </div>
              <div class="timeline-end flex items-center pl-0">
                <time class={`font-mono text-base font-semibold ${colors.textColor} ${colors.darkTextColor} ml-2`}>{item.year}</time>
              </div>
            </>
          )}
        </li>
      );
    })
  }
  </ul>

<style>
  .timeline {
    display: grid;
    grid-template-columns: 1fr 36px 1fr;
    gap: 0.75rem;
    position: relative;
  }

  .timeline-vertical {
    grid-auto-flow: dense;
  }

  .timeline-line-container {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    display: flex;
    justify-content: center;
    z-index: 1;
    pointer-events: none;
  }

  .timeline-line-center {
    width: 2px;
    height: 100%;
    background: linear-gradient(to bottom, 
      rgba(148, 163, 184, 0.1) 0%, 
      rgba(148, 163, 184, 0.8) 20%,
      rgba(148, 163, 184, 0.8) 80%,
      rgba(148, 163, 184, 0.1) 100%
    );
  }
  
  .dark .timeline-line-center {
    background: linear-gradient(to bottom, 
      rgba(71, 85, 105, 0.1) 0%, 
      rgba(71, 85, 105, 0.8) 20%,
      rgba(71, 85, 105, 0.8) 80%,
      rgba(71, 85, 105, 0.1) 100%
    );
  }

  .timeline-item {
    grid-column: 1 / span 3;
    grid-template-columns: subgrid;
    display: grid;
    gap: inherit;
    position: relative;
  }

  .timeline-middle {
    grid-column: 2;
    display: grid;
    place-items: center;
    position: relative;
    z-index: 10;
    padding: 0;
  }

  .timeline-start {
    grid-column: 1;
    text-align: right;
    display: flex;
    align-items: center;
    height: 2rem;
    padding-right: 0;
  }

  .timeline-end {
    grid-column: 3;
    display: flex;
    align-items: center;
    height: 2rem;
    padding-left: 0;
  }
  
  .timeline-dot {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    border: 2px solid white;
    box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.3);
  }
  
  .timeline-box {
    position: relative;
    border-radius: 0.75rem;
  }

  /* 响应式调整 */
  @media (max-width: 640px) {
    .timeline {
      grid-template-columns: 32px 1fr;
      gap: 0.5rem;
    }

    .timeline-item {
      grid-column: 1 / span 2;
    }

    .timeline-middle {
      grid-column: 1;
    }

    .timeline-start,
    .timeline-end {
      grid-column: 2;
      text-align: left;
    }
    
    .timeline-line-container {
      justify-content: flex-start;
      padding-left: 16px;
    }
  }

  /* 特定的列表样式重置 */
  ul.timeline {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  ul.timeline li {
    margin-bottom: 0;
    padding-bottom: 1.25rem;
  }

  ul.timeline li:last-child {
    padding-bottom: 0;
  }
</style>
</style>